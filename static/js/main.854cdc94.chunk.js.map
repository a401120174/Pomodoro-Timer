{"version":3,"sources":["components/InputAdd/InputAdd.js","components/TodoList/TodoList.js","components/BigPlayBtn/BigPlayBtn.js","components/Modal/Modal.js","components/Backet/Backet.js","components/TabTodo/TabTodo.js","App.js","serviceWorker.js","index.js"],"names":["InputAdd","props","react_default","a","createElement","className","value","onChange","placeholder","onClick","onAdd","DoingList","_ref","name","time","onCompleteClick","Fragment","minute","Math","floor","sec","concat","getTime","OtherList","_ref2","onGoClick","Icon","TodoList","_ref3","lists","filter","item","done","slice","length","map","list","idx","TodoList_DoingList","bind","id","key","TodoList_OtherList","BigPlayBtn","playing","tabs","Modal","activeTab","onTabClick","children","onClose","tab","Backet","title","List","data","onDoneClick","_ref$onPlayClick","onPlayClick","components_Backet_Backet","TabTodo","todoList","doneList","TabTodo_List","defaultData","shortid","generate","App","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","_useState3","_useState4","setTodoList","_useState5","_useState6","setTime","_useState7","_useState8","setPlaying","_useState9","_useState10","setTab","_useState11","_useState12","setTheme","savedTime","useRef","intervalId","useEffect","current","onChangeInput","e","target","onAddTask","newTodoList","toConsumableArray","findIndex","newItem","objectSpread","clearInterval","setInterval","components_InputAdd_InputAdd","components_TodoList_TodoList","components_BigPlayBtn_BigPlayBtn","components_Modal_Modal","components_TabTodo_TabTodo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.854cdc94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./InputAdd.scss\";\r\n\r\nconst InputAdd = props => {\r\n  return (\r\n    <div className=\"inputAdd\">\r\n      <input\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        placeholder=\"add a new missionâ€¦\"\r\n      />\r\n      <div className=\"inputAddBtn hoverStyle\" onClick={props.onAdd}>\r\n        +\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputAdd;\r\n","import React from \"react\";\r\nimport \"./TodoList.scss\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst getTime = time => {\r\n  const minute = Math.floor(time / 60);\r\n  const sec = time % 60;\r\n\r\n  return `${minute}:${sec < 10 ? \"0\" : \"\"}${sec}`;\r\n};\r\n\r\nconst DoingList = ({ name, time, onCompleteClick }) => (\r\n  <React.Fragment>\r\n    <div className=\"doingList\">\r\n      <div className=\"circleBtn\" onClick={onCompleteClick} />\r\n      <div className=\"rightBox\">\r\n        <div>{name}</div>\r\n        <div className=\"dotBox\">\r\n          <div className=\"littleCircle\" />\r\n          <div className=\"littleCircle\" />\r\n          <div className=\"littleCircle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"time\">{getTime(time)}</div>\r\n  </React.Fragment>\r\n);\r\n\r\nconst OtherList = ({ name, onGoClick, onCompleteClick }) => (\r\n  <div className=\"otherList\">\r\n    <div onClick={onCompleteClick} className=\"circleBtn\" />\r\n    <div className=\"center\">{name}</div>\r\n    <div onClick={onGoClick} className=\"btn hoverStyle\">\r\n      <Icon>play_arrow</Icon>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst TodoList = ({ lists, onGoClick, onCompleteClick, time }) => {\r\n  lists = lists.filter(item => !item.done);\r\n  lists = lists.slice(0, 4);\r\n  return (\r\n    <div className=\"todoList\">\r\n      {lists.length > 0 &&\r\n        lists.map((list, idx) => {\r\n          return idx === 0 ? (\r\n            <DoingList\r\n              name={list.name}\r\n              time={time}\r\n              onCompleteClick={onCompleteClick.bind(null, list.id)}\r\n              key={idx}\r\n            />\r\n          ) : (\r\n            <OtherList\r\n              name={list.name}\r\n              onGoClick={onGoClick.bind(null, idx)}\r\n              onCompleteClick={onCompleteClick.bind(null, list.id)}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./BigPlayBtn.scss\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst BigPlayBtn = props => {\r\n  return (\r\n    <div className={`BigPlayBtn ${props.playing ? \"playing\" : \"\"}`}>\r\n      <div>\r\n        <div className=\"btn hoverStyle scaleAnimation\" onClick={props.onClick}>\r\n          {props.playing ? <Icon>pause</Icon> : <Icon>play_arrow</Icon>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigPlayBtn;\r\n","import React from \"react\";\r\nimport \"./Modal.scss\";\r\nimport InputAdd from \"../InputAdd/InputAdd.js\";\r\n\r\nconst tabs = [\"TO-DO LIST\", \"ANALYTICS\", \"RINGTONES\"];\r\nconst Modal = ({ activeTab, onTabClick, children, onClose }) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"tabs\">\r\n        {tabs.map((tab, idx) => (\r\n          <div\r\n            className={`tab ${idx === activeTab ? \"active\" : \"\"}`}\r\n            onClick={onTabClick.bind(null, idx)}\r\n          >\r\n            {tab}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>{children}</div>\r\n      <div className=\"closeBtn\" onClick={onClose}>\r\n        CLOSE\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./Backet.scss\";\r\n\r\nconst Backet = props => {\r\n  return (\r\n    <div className=\"backet\">\r\n      <div className=\"title\">\r\n        {props.title}\r\n        <span>+</span>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Backet;\r\n","import React from \"react\";\nimport Backet from \"../Backet/Backet.js\";\nimport \"./TabTodo.scss\";\n\nconst List = ({ data, title, onDoneClick, onPlayClick = () => {} }) => {\n  return (\n    <Backet title={title}>\n      {data.map(item => (\n        <div className={`otherList ${onDoneClick ? \"\" : \"doneLine\"}`}>\n          {onDoneClick && (\n            <div\n              className=\"circleBtn\"\n              onClick={onDoneClick.bind(null, item.id)}\n            />\n          )}\n          <div>{item.name}</div>\n          <div onClick={onPlayClick.bind(null, item.id)}>GO!</div>\n        </div>\n      ))}\n    </Backet>\n  );\n};\n\nconst TabTodo = props => {\n  const todoList = props.data.filter(item => !item.done);\n  const doneList = props.data.filter(item => item.done);\n  return (\n    <div className=\"tabTodo\">\n      {props.children}\n      <List\n        data={todoList}\n        title=\"TODO\"\n        onDoneClick={props.onDoneClick}\n        onPlayClick={props.onPlayClick}\n      />\n      <List data={doneList} title=\"DONE\" />\n    </div>\n  );\n};\n\nexport default TabTodo;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.scss\";\nimport InputAdd from \"./components/InputAdd/InputAdd.js\";\nimport TodoList from \"./components/TodoList/TodoList.js\";\nimport BigPlayBtn from \"./components/BigPlayBtn/BigPlayBtn.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport TabAnalytic from \"./components/TabAnalytic/TabAnalytic.js\";\nimport TabRingtone from \"./components/TabRingtone/TabRingtone.js\";\nimport TabTodo from \"./components/TabTodo/TabTodo.js\";\nimport shortid from \"shortid\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst defaultData = [\n  { name: \"Learn Redux or Hook\", done: false, id: shortid.generate() },\n  {\n    name: \"Buy new MacBook Pro\",\n    done: false,\n    id: shortid.generate()\n  },\n  { name: \"Grab Black Friday Sales\", done: true, id: shortid.generate() },\n  { name: \"Watch Bohemian Rhapsody\", done: false, id: shortid.generate() },\n  {\n    name: \" A smart phone and tablet computer\",\n    done: true,\n    id: shortid.generate()\n  }\n];\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoList, setTodoList] = useState(defaultData);\n  const [time, setTime] = useState(60 * 25);\n  const [playing, setPlaying] = useState(false);\n  const [tab, setTab] = useState(-1);\n  const [theme, setTheme] = useState(\"PINK\");\n\n  const savedTime = useRef();\n  const intervalId = useRef(null);\n\n  useEffect(() => {\n    savedTime.current = time;\n    if (time === 0) {\n      setTheme(\"BLUE\");\n    }\n  }, [time]);\n\n  const onChangeInput = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onAddTask = () => {\n    if (!inputValue) return;\n    const newTodoList = [\n      ...todoList,\n      {\n        name: inputValue,\n        done: false,\n        id: shortid.generate()\n      }\n    ];\n\n    setTodoList(newTodoList);\n    setInputValue(\"\");\n  };\n\n  const onCompleteClick = id => {\n    const newTodoList = [...todoList];\n    const idx = newTodoList.findIndex(list => list.id === id);\n\n    const newItem = { ...newTodoList[idx], done: true };\n    newTodoList[idx] = newItem;\n    setTodoList(newTodoList);\n  };\n\n  const onGoClick = idx => {\n    setPlaying(!playing);\n    if (playing) {\n      clearInterval(intervalId.current);\n    } else {\n      intervalId.current = setInterval(() => {\n        setTime(savedTime.current - 1);\n      }, 1000);\n    }\n  };\n\n  const onTabClick = idx => {\n    setTab(idx);\n  };\n\n  const renderModal = () => {\n    return (\n      <TabTodo\n        data={todoList}\n        onDoneClick={onCompleteClick}\n        onPlayClick={onGoClick}\n      >\n        <InputAdd\n          value={inputValue}\n          onChange={onChangeInput}\n          onAdd={onAddTask}\n        />\n      </TabTodo>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"leftBox\">\n        <InputAdd\n          value={inputValue}\n          onChange={onChangeInput}\n          onAdd={onAddTask}\n        />\n        <TodoList\n          lists={todoList}\n          time={time}\n          onCompleteClick={onCompleteClick}\n          onGoClick={onGoClick}\n        />\n      </div>\n      <div className=\"centerBox\">\n        <BigPlayBtn onClick={onGoClick} playing={playing} />\n      </div>\n      <div className=\"asideBox\">\n        <div onClick={onTabClick.bind(null, 0)} className=\"hoverStyle\">\n          <Icon>list</Icon>\n        </div>\n        <div onClick={onTabClick.bind(null, 1)} className=\"hoverStyle\">\n          <Icon>assessment</Icon>\n        </div>\n        <div onClick={onTabClick.bind(null, 2)} className=\"hoverStyle\">\n          <Icon>music_note</Icon>\n        </div>\n        <div className=\"logo\">POMODORO</div>\n      </div>\n      {tab >= 0 && (\n        <Modal\n          onTabClick={onTabClick}\n          activeTab={tab}\n          onClose={onTabClick.bind(null, -1)}\n        >\n          {renderModal()}\n        </Modal>\n      )}\n      <div className=\"blueBg\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}